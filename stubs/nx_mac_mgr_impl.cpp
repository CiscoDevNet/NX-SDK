/** **********************************************************************
    * This file is auto-generated by nxsdk_remote_stub_gen.py 
    * at 2018-09-26 21:31:54.734317
    * 
    * Copyright (c) 2017 by cisco Systems, Inc.
    *
    * All rights reserved.
************************************************************************/
#include "nx_mac_mgr_impl.h" 
   
using namespace nxos;

   
    
// Implementation for class  
NxMacImpl::NxMacImpl()
{

}

NxMacImpl::~NxMacImpl()
{

}

std::string 
NxMacImpl::getMacAddress()
{
   return "";
}

nxos::type_e 
NxMacImpl::getType()
{
   return (nxos::type_e)0;
}

unsigned int 
NxMacImpl::getVlan()
{
   return (unsigned int)0;
}

std::string 
NxMacImpl::getIntfName()
{
   return "";
}

nxos::event_type_e 
NxMacImpl::getEvent()
{
   return (nxos::event_type_e)0;
}

bool 
NxMacImpl::operator==(NxMac const& mac_obj) const
{
   return false;
}

bool 
NxMacImpl::operator!=(NxMac const& mac_obj) const
{
   return false;
}

bool 
NxMacImpl::equal(NxMac const& mac_obj) const
{
   return false;
}
    
// Implementation for class  
NxMacMgrImpl::NxMacMgrImpl()
{

}

NxMacMgrImpl::~NxMacMgrImpl()
{

}

bool 
NxMacMgrImpl::addStaticMac(const std::string& macAddr, const unsigned int vlan, const std::string& intf_name)
{
   return false;
}

bool 
NxMacMgrImpl::delStaticMac(const std::string& macAddr, const unsigned int vlan)
{
   return false;
}

NxMac* 
NxMacMgrImpl::getMac(const std::string& macAddr, const unsigned int vlan, bool clearBuffer)
{
   return NULL;
}

bool 
NxMacMgrImpl::watchAllMac(bool download)
{
   return false;
}

bool 
NxMacMgrImpl::unwatchAllMac()
{
   return false;
}

bool 
NxMacMgrImpl::watchMac(const unsigned int vlan, const std::string& macAddr, bool download)
{
   return false;
}

bool 
NxMacMgrImpl::unwatchMac(const unsigned int vlan, const std::string& macAddr)
{
   return false;
}

void 
NxMacMgrImpl::setMacMgrHandler(NxMacMgrHandler* handler)
{
   return;
}

NxMacMgrHandler* 
NxMacMgrImpl::getMacMgrHandler()
{
   return NULL;
}