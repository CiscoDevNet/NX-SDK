/** **********************************************************************
    * This file is auto-generated by nxsdk_remote_stub_gen.py 
    * at 2018-09-26 21:31:54.738149
    * 
    * Copyright (c) 2017 by cisco Systems, Inc.
    *
    * All rights reserved.
************************************************************************/
#ifndef __nx_cli_impl_H__
#define __nx_cli_impl_H__

#include "nx_cli.h" 
   
using namespace nxos;

   
namespace nxos {

class NxCliCmdImpl : public NxCliCmd {
public:
    NxCliCmdImpl();
    virtual ~NxCliCmdImpl();
    void updateKeyword(const char *keyword_name,const char *help_str);
    void updateParam(const char *param_name,const char *help_str,nxos::param_type_e param_type = nxos::P_STRING,void *param_type_attributes = NULL,int param_type_attr_len = 0,bool is_key = false,bool additive = false,uint8_t repeat_count = 0);
    void addTimeout(uint32_t timeout);
    void addMode(modes_t mode);
    NxCliCmd::cmdtype_t getCmdType();
    NxCliCmd::modes_t getCmdMode();
    std::string getCmdName();
    std::string getCmdSyntax();
    std::string getCmdLineStr();
    std::string getCmdErr();
    bool isKeywordSet(const char *keyword_name);
    nxos::param_type_e getParamType(const char *param_name);
    void* getParamValue(const char *param_name, bool fromFirst = false);
    int getParamCount(const char *param_name);
    void printConsole(const char *fmt, ...);
    void updateKeyword(const char *keyword_name,const char *help_str,bool make_key);
};

class NxCliParserImpl : public NxCliParser {
public:
    NxCliParserImpl();
    virtual ~NxCliParserImpl();
    NxCliCmd* newCliCmd(NxCliCmd::cmdtype_t ctype,const char *cmd_name,const char *syntax);
    NxCliCmd* newShowCmd(const char *cmd_name,const char *syntax);
    NxCliCmd* newConfigCmd(const char *cmd_name,const char *syntax);
    void addToParseTree();
    void delFromParseTree();
    void setCmdHandler(NxCmdHandler *handler);
    std::string getParserStatus();
    NxCmdHandler* getCmdHandler();
    char* execShowCmd(std::string show_syntax,nxos::record_type_e type = nxos::R_TEXT,bool *oper_result = NULL);
    char* execConfigCmd(const char *filename);
};
}
#endif // __nx_cli_impl_H__ 