/** **********************************************************************
    * This file is auto-generated by nxsdk_remote_stub_gen.py 
    * at 2019-07-18 23:18:33.478692
    * 
    * Copyright (c) 2017 by cisco Systems, Inc.
    *
    * All rights reserved.
************************************************************************/
#include "nx_sdk_impl.h" 
   
using namespace nxos;

   
    
// Implementation for class  
NxSdkImpl::NxSdkImpl()
{

}

NxSdkImpl::~NxSdkImpl()
{

}

NxSdk* 
NxSdk::getSdkInst(int argc, char** argv)
{
   return NULL;
}

void 
NxSdkImpl::setAppDesc(std::string desc)
{
   return;
}

const char* 
NxSdkImpl::getAppName()
{
   return NULL;
}

const char* 
NxSdkImpl::getAppDesc()
{
   return NULL;
}

int 
NxSdkImpl::getAppId()
{
   return (int)0;
}

NxCliParser* 
NxSdkImpl::getCliParser()
{
   return NULL;
}

NxTrace* 
NxSdkImpl::getTracer()
{
   return NULL;
}

void 
NxSdkImpl::startEventLoop()
{
   return;
}

void 
NxSdkImpl::stopEventLoop()
{
   return;
}

NxSdk* 
NxSdk::getSdkInst(int argc, char** argv, bool advException)
{
   return NULL;
}

NxRibMgr* 
NxSdkImpl::getRibMgr()
{
   return NULL;
}

void 
NxSdkImpl::setAppPriority(nxos::prio_e prio)
{
   return;
}

NxIntfMgr* 
NxSdkImpl::getIntfMgr()
{
   return NULL;
}

NxAdjMgr* 
NxSdkImpl::getAdjMgr()
{
   return NULL;
}

NxMacMgr* 
NxSdkImpl::getMacMgr()
{
   return NULL;
}

NxDmeMgr* 
NxSdkImpl::getDmeMgr()
{
   return NULL;
}

bool 
NxSdkImpl::isInEventLoop() const
{
   return false;
}

nxos::running_env_e 
NxSdkImpl::getRunningEnv() const
{
   return (nxos::running_env_e)0;
}

NxSdk* 
NxSdk::getSdkInst(int argc, char** argv, bool advException, const char* remoteIp, uint32_t remotePort)
{
   return NULL;
}

std::string 
NxSdkImpl::getRemoteIp()
{
   return "";
}

uint32_t 
NxSdkImpl::getRemotePort()
{
   return (uint32_t)0;
}

nxos::state_type_e 
NxSdkImpl::getRemoteConnStatus()
{
   return (nxos::state_type_e)0;
}

void 
NxSdkImpl::purgeAllSdkObjs()
{
   return;
}

void 
NxSdkImpl::setSdkHandler(NxSdkHandler* handler)
{
   return;
}

void 
NxSdkImpl::unsetSdkHandler()
{
   return;
}

NxSdkHandler* 
NxSdkImpl::getSdkHandler()
{
   return NULL;
}

NxSdk* 
NxSdk::getSdkInst(int argc, char** argv, bool advException, const char* remoteIp, uint32_t remotePort, const char* certificate)
{
   return NULL;
}