/** **********************************************************************
    * This file is auto-generated by nxsdk_remote_stub_gen.py 
    * at 2018-09-26 21:31:54.739874
    * 
    * Copyright (c) 2017 by cisco Systems, Inc.
    *
    * All rights reserved.
************************************************************************/
#ifndef __nx_dme_impl_H__
#define __nx_dme_impl_H__

#include "nx_dme.h" 
   
using namespace nxos;

   
namespace nxos {

class NxDmeImpl : public NxDme {
public:
    NxDmeImpl();
    virtual ~NxDmeImpl();
    std::string getDn();
    void setProperty(const std::string &sInPropName,const std::string &sInValue,int *err);
    std::string getProperty(const std::string &sInPropName,int *err);
    std::string commit(int *err);
    std::string getDataJson();
    std::string iterateProperties(bool fromFirst = false);
    nxos::event_type_e getEvent();
    bool getEventIsPropertyChanged(const std::string &property);
    std::string iterateEventUpdatedProperties(bool fromFirst = false);
    bool operator==(NxDme const &dme_obj) const;
    bool operator!=(NxDme const &dme_obj) const;
    bool equal(NxDme const &dme_obj) const;
};

class NxDmeMgrImpl : public NxDmeMgr {
public:
    NxDmeMgrImpl();
    virtual ~NxDmeMgrImpl();
    NxDme* getDmeObj(const std::string &Dn);
    NxDme* addDmeObj(const std::string &sInDn,int *error);
    int delDmeObj(const std::string &sInDn);
    std::string getMoJson(const std::string &sInDn,int *error);
    std::string getChildrenMoJson(const std::string &sInDn,int *error);
    bool existsDmeObj(const std::string &sInDn);
    bool watch(const std::string &sInDn,const std::string &pattern = "",bool download = true);
    bool unwatch(const std::string &sInDn,const std::string &pattern = "");
    bool setDmeHandler(NxDmeMgrHandler *handler);
    NxDmeMgrHandler* getDmeHandler();
};
}
#endif // __nx_dme_impl_H__ 
