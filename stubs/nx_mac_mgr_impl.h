/** **********************************************************************
    * This file is auto-generated by nxsdk_remote_stub_gen.py 
    * at 2018-09-26 21:31:54.733698
    * 
    * Copyright (c) 2017 by cisco Systems, Inc.
    *
    * All rights reserved.
************************************************************************/
#ifndef __nx_mac_mgr_impl_H__
#define __nx_mac_mgr_impl_H__

#include "nx_mac_mgr.h" 
   
using namespace nxos;

   
namespace nxos {

class NxMacImpl : public NxMac {
public:
    NxMacImpl();
    virtual ~NxMacImpl();
    std::string getMacAddress();
    nxos::type_e getType();
    unsigned int getVlan();
    std::string getIntfName();
    nxos::event_type_e getEvent();
    bool operator==(NxMac const &mac_obj) const;
    bool operator!=(NxMac const &mac_obj) const;
    bool equal(NxMac const &mac_obj) const;
};

class NxMacMgrImpl : public NxMacMgr {
public:
    NxMacMgrImpl();
    virtual ~NxMacMgrImpl();
    bool addStaticMac(const std::string &macAddr,const unsigned int vlan,const std::string &intf_name);
    bool delStaticMac(const std::string &macAddr,const unsigned int vlan);
    NxMac* getMac(const std::string &macAddr,const unsigned int vlan,bool clearBuffer = false);
    bool watchAllMac(bool download = true);
    bool unwatchAllMac();
    bool watchMac(const unsigned int vlan,const std::string &macAddr = "",bool download = true);
    bool unwatchMac(const unsigned int vlan,const std::string &macAddr = "");
    void setMacMgrHandler(NxMacMgrHandler *handler);
    NxMacMgrHandler* getMacMgrHandler();
};
}
#endif // __nx_mac_mgr_impl_H__ 